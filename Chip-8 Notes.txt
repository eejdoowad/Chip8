Chip-8 Notes

HIGH PRIORITY: Couldn't determine whether to increment SP first of store PC first in cpu_i_callSubroutine
ARITHMETIC TYPE: Is it unsigned? 1's complement? 2's complement?
PROGRAM COUNTER: When and where is it updated? When in the Chip8? When in actual processors?
RANDOM SEED: where do I do it?
SCREEN AXES: Origin is in top left corner. X increases to right. Y increases to bottom.

0x000-0x1FF - Chip 8 interpreter (contains font set in emu)
0x050-0x0A0 - Used for the built in 4x5 pixel font set (0-F)
0x200-0xFFF - Program ROM and work RAM


The Chip-8 processor has the following specifications:

4KB (4096 Bytes) of memory addressable by 12 bits.
Memory range: 0x000 to 0xFFF
First 80 Bytes used to store fontset (locations 0 - 79)
First 512 Bytes (0x000 to 0x1FF) are used
by the interpreter and are thus unused. Programs begin at 0x200

16 general purpose 8-bit registers labeled Vx, x : [0,F]
VF register should be unused because it is used as flag for some instructions like collision and overflow
16-bit Register I used to store memory addresses, only uses 12 lower bits
8-bit delay register, automatically decrements at 60Hz when nonzero
8-bit sound register, automatically decrements at 60Hz when nonzero

psuedo-registers: 
PC (16-bit program counter) stores the currently executing address
PC loaded to 0x200 on startup
SP (8-bit Stack pointer) used to point to the topmost level fo the stack

The stack. Array of 16 16-bit values. used to store the address that the 
interpreter should return to when finsihed with a subroutine.
allows for 16 levels of nested subroutines

Keyboard. Uses hexadecimal keypad. Go here for detailed picture:
http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.3

Display
64*32=2048 pixel monochrome (single color) display
Format:

 (0,0)     (63,0)

 (0,31)   (63,31)

Draws graphics through sprites. Go here for more info.
http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.4

fonts loaded at startup from 0x00 to 0x50 (80 bytes total)

Timers and sounds. Go to website.

36 instructions, 2 bytes long, stored most significant byte first
instructions should be located at even addresses.
sprite data of odd addresses should be padded to prevent odd address instructions

personal notes, exit(1) is in stdlib.h

decode and execute performed in single function in my implementation
decoding involves fetching any necessary operands




















// My personal Chip-8 emulator. With lots of help from:
// http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/
// http://devernay.free.fr/hacks/chip8/C8TECH10.HTM
// Sufyan Dawoodjee
